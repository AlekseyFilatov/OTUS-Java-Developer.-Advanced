spring.application.name=webfluxclient
server.port=8089


logging.pattern.console: "%clr(%d{HH:mm:ss.SSS}){blue} %clr(---){faint} %clr([%15.15t]){yellow} %clr(:){red} %clr(%m){faint}%n"
spring.output.ansi.enabled: ALWAYS

#target.uri: http://${WEBCLIENTSERVICE_NAME}:8089
target.uri: http://localhost:8089


management.endpoint.health.show-details: always 

management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.prometheus.metrics.export.enabled=true


management.endpoint.shutdown.enabled=true

management.info.os.enabled=true
management.info.java.enabled=true
management.metrics.distribution.slo.http.server.requests=1ms, 10ms, 50ms
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5, 0.9, 0.95, 0.99, 0.999

webclient.esservice.uri: http://localhost:8087
webclient.reportservice.uri: http://localhost:8097
webclient.grpcservice.uri: http://localhost:8098

#webclient.esservice.uri: http://${ESSERVICE_NAME}:8087
#webclient.reportservice.uri: http://${REPORTSERVICE_NAME}:8097
#webclient.grpcservice.uri: http://${GRPCSERVICE_NAME}:8098

#circuitbreaker
resilience4j.circuitbreaker.instances.default.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.default.failure-rate-threshold=70
resilience4j.circuitbreaker.instances.default.sliding-window-size=10
resilience4j.circuitbreaker.instances.default.slowCallRateThreshold=70
resilience4j.circuitbreaker.instances.default.slowCallDurationThreshold=200ms
resilience4j.circuitbreaker.instances.default.wait-duration-in-open-state=1s
resilience4j.circuitbreaker.instances.default.permitted-number-of-calls-in-half-open-state=1

resilience4j.ratelimiter.instances.default.limit-for-period=20
resilience4j.ratelimiter.instances.default.limit-refresh-period=1s
resilience4j.ratelimiter.instances.default.timeout-duration=0s
resilience4j.ratelimiter.instances.default.register-health-indicator=true
resilience4j.ratelimiter.instances.default.allow-health-indicator-to-fail=true
resilience4j.ratelimiter.instances.default.subscribe-for-events=true